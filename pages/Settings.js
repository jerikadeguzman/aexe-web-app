import Head from 'next/head'
<<<<<<< HEAD
import { Heading, Center, Flex, Button, Stack, HStack, VStack, Text, Input, Box, Image, Switch, IconButton, useColorModeValue,
  useBreakpointValue, Container, useDisclosure} from "@chakra-ui/react";
import { Avatar, AvatarBadge, AvatarGroup, AiOutlineUser} from '@chakra-ui/react'
import React, { useEffect, useState, useContext } from "react";
//import Router from 'react'
import { FiMenu } from 'react-icons/fi'
=======
import { Heading, Center, Flex, Button, Stack, HStack, VStack, Text, Input, Box, Image, Switch, Select, useColorModeValue, InputGroup,InputLeftAddon,
  useBreakpointValue, Container, useDisclosure, FormControl, ChakraProvider,FormLabel, WrapItem,ButtonGroup} from "@chakra-ui/react";
import { Avatar, AvatarBadge, AvatarGroup, AiOutlineUser } from "@chakra-ui/avatar"
import React, { useEffect, useState, useContext } from "react";
import Router from 'react'
import { IconButton } from '@chakra-ui/react'
>>>>>>> 8fefdc5084ffa88c856729d5317a8658b0231f36
import {
  Drawer,
  DrawerBody,
  DrawerFooter,
  DrawerHeader,
  DrawerOverlay,
  DrawerContent,
  DrawerCloseButton,
} from "@chakra-ui/react";
<<<<<<< HEAD
import NextLink from 'next/link'
import { Textarea } from '@chakra-ui/react'
import Router from "next/router";


export default function Dashboard() {
  const isDesktop = useBreakpointValue({ base: false, lg: true })
  const { isOpen, onOpen, onClose } = useDisclosure();
  const btnRef = React.useRef();

    return (
        <>

      <Head>
        <title>Settings</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/aexelogo.png" />
      </Head>
          
          <Box as="section" pb={{ base: '12', md: '24' }}  bg="#2F5597"> 
            <Box as="nav" bg="bg-surface" boxShadow={useColorModeValue('sm', 'sm-dark')}>
              <Flex>
                <IconButton
                ref={btnRef}
                icon={<FiMenu fontSize="1.25rem"/>}
                onClick={onOpen}
                aria-label="Open Menu"
                bg="#2F5597"
                />

                <IconButton
                icon={<Image src="/aexelogo.png"/>}
                w="5px"
                isRound={true}
                aria-label="Homepage"
                onClick={() => Router.push("/dashboard")}
                />
                  <Heading marginLeft={25} textColor="orange" >AEXE</Heading>

              <Drawer
                isOpen={isOpen}
                placement="left"
                colorScheme={"blue"}
                onClose={onClose}
                finalFocusRef={btnRef}>

                <DrawerOverlay/>
                <DrawerContent>
                  <DrawerCloseButton />

                  <DrawerHeader bgColor='#2F5597'>
                    <HStack>
                      <Avatar bg='teal.500' name='getInitials'></Avatar>
                      <Heading as='h4' size='md' color='whiteAlpha.900'>Welcome</Heading>
                    </HStack>
                  </DrawerHeader>

                  <DrawerBody bgColor='#8FAADC'>
                    <Flex flexDir="column" align="center">
                      <NextLink href="/Messages" passHref>
                        <Button as="a" variant="ghost" aria-label="Messages" my={5} w="100%" textColor='#DAE3F3' color="blue">Messages</Button>
                      </NextLink>
                  </Flex>

                  <Flex flexDir="column" align="center">
                      <NextLink href="/ARInstructor" passHref>
                        <Button as="a" variant="ghost" aria-label="AR Instructor" my={5} w="100%" textColor='#DAE3FE'>AR Instructor</Button>
                      </NextLink>
                  </Flex>

                  <Flex flexDir="column" align="center">
                      <NextLink href="/Announcement" passHref>
                        <Button as="a" variant="ghost" aria-label="Announcment" my={5} w="100%" textColor='#DAE3F3'>Announcement</Button>
                      </NextLink>
                  </Flex>

                  <Flex flexDir="column" align="center">
                      <NextLink href="/Forums" passHref>
                        <Button as="a" variant="ghost" aria-label="Forums" my={5} w="100%" textColor='#DAE3F3'>Forums</Button>
                      </NextLink>
                  </Flex>

                  <Flex flexDir="column" align="center">
                      <NextLink href="/InquiriesConcern.js" passHref>
                        <Button as="a" variant="ghost" aria-label="Inquiries and Concerns" my={5} w="100%" textColor='#DAE3F3'>Inquiries/Concern</Button>
                      </NextLink>
                  </Flex>

                  <Flex flexDir="column" align="center">
                      <NextLink href="/Settings" passHref>
                        <Button as="a" variant="ghost" aria-label="Settings" my={5} w="100%" textColor='#DAE3F3'>Settings</Button>
                      </NextLink>
                  </Flex>

                  </DrawerBody>

                  <DrawerFooter bgColor='#8FAADC'>
                    <Button colorScheme='red'
                    >Logout</Button>
                  </DrawerFooter>

                </DrawerContent>
              </Drawer>

              </Flex>
            </Box>

            <Center>
              <Box bg="lavender" w="1550px" h="800px" >
                  <Center>
                    <Box bg="#8FAADC" w="800px" h="800px"
                          rounded="10px"
                          borderColor="gray.300"
                          boxShadow="md">
                               
                    </Box>
                  </Center>
              </Box>
            </Center>
            

          </Box>

        
         

          

        </>
      )
}

const styleProps = {
    indexWrapper: {
      height: "100vh",
      flexDirection: "column",
      alignItems: "center",
      justifyContent: "center",
      bgColor: "#22202A",
    },
    formWrapper: {
      borderRadius: "xl",
      width: "54vh",
      height: "50vh",
      flexDirection: "column",
      alignItems: "center",
      padding: "2vh",
      color: "white",
      bgColor: "#E1CBA5",
      
      
    }
  }
=======
import { SmallAddIcon } from '@chakra-ui/icons';


export default function Settings(){
  const [input, setInput] = useState('')
  const [email, setEmail]= useState("")
  const [password, setPassword] = useState("")
  const [show, setShow] = useState(false)

    return(
        <> 
            <Flex>

              <Center>
                  <Box display='flex'
                        bgColor='whiteAlpha.900'
                        border='black'
                        >
                          

                    </Box>
                    <Center>
                      <Box bg="#8FAAADC" w="550px" h="750px" paddingLeft='55'
                          rounded="1px"
                          borderColor="gray.300"
                          boxShadow="md">
                        <VStack bgColor='blue.100' margin='5' h='10'> 
                        <Text fontSize="20" align="center" fontStyle='bold'> General Information</Text>

                        </VStack>
                        <FormControl isRequired>
                         <Stack spacing={1} paddingLeft="30">
                            
                            <FormLabel>First Name</FormLabel>
                            <Input placeholder='First Name'/>
                              
                            <FormLabel>Last Name</FormLabel>
                            <Input placeholder='Last Name' />
                               
                            <FormLabel>Username</FormLabel>
                            <Input placeholder='Username'/>
                               
                            <FormLabel>Gender</FormLabel>
                              <Select placeholder='Select Gender'>
                                <option>Female</option>
                                <option>Male</option>
                              </Select>
                                    
                              <FormLabel>Date of Birth</FormLabel>
                              <Input
                                placeholder="Select Date and Time"
                                size="md"
                                type="datetime-local"
                                />

                              <FormLabel>Email</FormLabel>
                              <Input placeholder={"Email/Username"} onChange={(event) => setEmail(event.target.value)}/>
                    
                              <FormLabel>Address</FormLabel>
                              <Input placeholder='Address'/>
                              
                              <FormLabel>Phone Number</FormLabel>
                              <InputGroup>
                                <InputLeftAddon children="+63"/>
                                <Input type="phone" roundedLeft="0" placeholder="phone number" />
                              </InputGroup>
                            
                            
                            </Stack>
                              
                        </FormControl>
                      </Box>

                    </Center>

              </Center>
              <VStack margin='10' padding='20'>

                <Box w="250px" h="250px" margin={15}
                  rounded="1px"
                  borderColor="gray.300"
                  boxShadow="md">
                          
                    <Stack bgColor='blue.100'> 
                      <Text fontSize="25" align="center" fontStyle='bold'> Profile </Text>
                    </Stack>

                    <VStack margin='3' bgColor='#E2E8F0' spacing='19'>
                      <WrapItem>
                        <Avatar size='2xl' name='Dan Abrahmov' src='https://bit.ly/dan-abramov' />
                      </WrapItem>

                      <Button leftIcon={<SmallAddIcon />} colorScheme='teal' size='md'> Upload</Button>

                    </VStack>
                  </Box>

                <Box w="600px" h="280px" bgColor="#8FAAADC"  margin={15}
                  rounded="1px"
                  borderColor="gray.300"
                  boxShadow="md">
                  
                  <VStack bgColor='blue.100'>
                    <Text margin={5}> SECURITY</Text>
                  </VStack>

                   <FormControl isRequired>
                      <HStack paddingLeft="3" spacing={10}>
                          <FormLabel> Old Password</FormLabel>
                            <Input placeholder='Old Password'/>
                      </HStack>      
                      <HStack paddingLeft="3" spacing={9}>                    
                        <FormLabel>New Password</FormLabel>
                          <Input placeholder='New Password' />
                      </HStack>
                      <HStack  paddingLeft="3" spacing={4}>
                        <FormLabel>Confirm Password</FormLabel>
                            <Input placeholder='Confirm Password'/>
                      </HStack>
                  </FormControl>
                </Box>

                <Center margin={10}>
                  <HStack direction='row' align='flex-end'
                      width="120spx"
                      justifyContent="right">
                    <ButtonGroup colorScheme='red' variant='solid' size='lg' h='1'>
                      <Button>Save All</Button>
                      <Button>Cancel</Button>
                    </ButtonGroup>

                  </HStack>
                </Center>
            </VStack>

            </Flex>

        </>
    ) 
}
>>>>>>> 8fefdc5084ffa88c856729d5317a8658b0231f36
