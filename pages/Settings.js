import Head from 'next/head'
import { 
  Heading, 
  Center, 
  Flex, 
  Button, 
  Stack, 
  HStack, 
  VStack, 
  Text, 
  Input, 
  Box, 
  Image, 
  Switch, 
  Select, 
  useColorModeValue, 
  InputGroup,
  InputLeftAddon,
  useBreakpointValue, 
  Container, 
  useDisclosure, 
  FormControl, 
  ChakraProvider,
  FormLabel, 
  WrapItem,
  ButtonGroup} from "@chakra-ui/react";
//import {  AvatarBadge, AvatarGroup, AiOutlineUser } from "@chakra-ui/avatar"
import React, { useEffect, useState, useContext } from "react";
//import Router from 'react'
import { FiMenu } from 'react-icons/fi'
import { IconButton } from '@chakra-ui/react'
import { 
  Modal, 
  ModalOverlay, 
  ModalContent, 
  ModalHeader, 
  ModalBody, 
  ModalCloseButton, 
  ModalFooter, 
  cancelRef
} from "@chakra-ui/react";
import {
  Drawer,
  DrawerBody,
  DrawerFooter,
  DrawerHeader,
  DrawerOverlay,
  DrawerContent,
  DrawerCloseButton,
} from "@chakra-ui/react";
import NextLink from 'next/link'
import { SmallAddIcon } from '@chakra-ui/icons';
import Avatar from 'react-avatar-edit';
import Router from "next/router";


export default function Settings(){
  const isDesktop = useBreakpointValue({ base: false, lg: true })
  const { isOpen, onOpen, onClose } = useDisclosure();
  const btnRef = React.useRef();
  const {
    isOpen: isOpenUploadModal,
    onOpen: onOpenUploadModal,
    onClose: onCloseUploadModal,
  } = useDisclosure();
  const [src, setSrc] = useState(null);
  const [preview, setPreview] = useState(null);
  const onClosePrev =()=>{
    setPreview(null);
  }
  const onCrop = view =>{
    setPreview(view);
  }


  useEffect(() => {
    setTimeout(() => {
      const checkSession = localStorage.getItem("email");
      if (!checkSession) {
        Router.push("/");
      }
      
    }, []);
  }, []);

    return(
        <> 

      <Head>
        <title>Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/aexelogo.png" />
      </Head>
          
          <Box as="section" pb={{ base: '12', md: '24' }}  bg="#2F5597"> 
          <Box as="nav" bg="bg-surface" boxShadow={useColorModeValue('sm', 'sm-dark')}>
              <Flex>
                <IconButton
                ref={btnRef}
                icon={<FiMenu fontSize="1.25rem"/>}
                onClick={onOpen}
                aria-label="Open Menu"
                bg="#2F5597"
                />

                <IconButton
                icon={<Image src="/aexelogo.png"/>}
                w="5px"
                isRound={true}
                aria-label="Homepage"
                onClick={() => Router.push("/dashboard")}
                />
                  <Heading marginLeft={25} textColor="orange">AEXE</Heading>

                <Drawer
                isOpen={isOpen}
                placement="left"
                colorScheme={"blue"}
                onClose={onClose}
                finalFocusRef={btnRef}>

                <DrawerOverlay/>
                <DrawerContent>
                  <DrawerCloseButton />

                  <DrawerHeader bgColor='#2F5597'>
                    <HStack>
                      
                      <Heading as='h4' size='md' color='whiteAlpha.900'>Welcome</Heading>
                    </HStack>
                  </DrawerHeader>

                  <DrawerBody bgColor='#8FAADC'>
                    <Flex flexDir="column" align="center">
                      <NextLink href="/Messages" passHref>
                        <Button as="a" 
                        variant="ghost" 
                        aria-label="Messages" 
                        my={5} w="100%" 
                        textColor='#DAE3F3' 
                        color="blue">Messages</Button>
                      </NextLink>
                  </Flex>

                  <Flex flexDir="column" align="center">
                      <NextLink href="/ARInstructor" passHref>
                        <Button as="a"
                         variant="ghost" 
                         aria-label="AR Instructor" 
                         my={5} w="100%" 
                         textColor='#DAE3FE'>AR Instructor</Button>
                      </NextLink>
                  </Flex>

                  <Flex flexDir="column" align="center">
                      <NextLink href="/Announcement" passHref>
                        <Button as="a" 
                        variant="ghost" 
                        aria-label="Announcements" 
                        my={5} w="100%" 
                        textColor='#DAE3F3'>Announcement</Button>
                      </NextLink>
                  </Flex>

                  <Flex flexDir="column" align="center">
                      <NextLink href="/Forums" passHref>
                        <Button as="a" 
                        variant="ghost" 
                        aria-label="Forums" 
                        my={5} w="100%" 
                        textColor='#DAE3F3'>Forums</Button>
                      </NextLink>
                  </Flex>

                  <Flex flexDir="column" align="center">
                      <NextLink href="/InquiriesConcern.js" passHref>
                        <Button as="a" 
                        variant="ghost" 
                        aria-label="Inquiries and Concerns" 
                        my={5} w="100%" 
                        textColor='#DAE3F3'>Inquiries/Concern</Button>
                      </NextLink>
                  </Flex>

                  <Flex flexDir="column" align="center">
                      <NextLink href="/Settings" passHref>
                        <Button as="a" 
                        variant="ghost" 
                        aria-label="Settings" 
                        my={5} w="100%" 
                        textColor='#DAE3F3'>Settings</Button>
                      </NextLink>
                  </Flex>

                  </DrawerBody>

                  <DrawerFooter bgColor='#8FAADC'>
                    <Button colorScheme='red'
                   onClick={() => {Router.push("/")
                   localStorage.clear();
                 }}
                    >Logout</Button>
                  </DrawerFooter>

                </DrawerContent>
              </Drawer>

              </Flex>
            </Box>

           
              <Center>
                <Box bg="lavender" w="1550px" h="1000px">
                  <Center>
                    <HStack> 
                      <Box bg="#8FAADC" w="500px" h="850px"
                            alignItems="center"
                            rounded="4px"
                            marginLeft="120"
                            borderColor="gray.300"
                            boxShadow="md">
                      <VStack bgColor='blue.100' margin='5' h='10' rounded="20"> 
                        <Text fontSize="20" align="center" fontStyle='bold' marginTop="1"> General Information</Text>
                      </VStack>

                      <FormControl isRequired 
                      paddingLeft={10} 
                      paddingRight={10}
                      alignContent="center">
                      <Stack spacing={3}>
         
                        <FormLabel>First Name</FormLabel>
                        <Input placeholder='First Name'/>
                          
                        <FormLabel>Last Name</FormLabel>
                        <Input placeholder='Last Name'/>
           
                        <FormLabel>Username</FormLabel>
                        <Input placeholder='Username'/>
           
                        <FormLabel>Gender</FormLabel>
                          <Select placeholder='Select Gender'>
                            <option>Female</option>
                            <option>Male</option>
                          </Select>
                 
                        <FormLabel>Date of Birth</FormLabel>
                        <Input
                          placeholder="Select Date and Time"
                          size="md"
                          type="datetime-local"
                          />

                        <FormLabel>Email</FormLabel>
                        <Input 
                          placeholder={"Email/Username"} 
                          onChange={(event) => setEmail(event.target.value)}/>

                        <FormLabel>Address</FormLabel>
                        <Input 
                          placeholder='Address'/>
                        
                        <FormLabel>Phone Number</FormLabel>
                        <InputGroup>
                          <InputLeftAddon 
                            children="+63"/>
                          <Input 
                            type="phone" 
                            roundedLeft="0" 
                            placeholder="phone number" />
                        </InputGroup>
         
         
                    </Stack>          
                    </FormControl>
                    </Box>

                  <Box bg="lavender">
                    <VStack margin='10' padding='20'>
                    <Box bg="#8FAADC" w="300px" h="320px" margin="15"                   
                      rounded="4px"
                      borderColor="gray.300"
                      boxShadow="md">
                      <Stack> 
                        <Text fontSize="20"
                        bgColor='blue.100'
                        rounded="20"
                        marginLeft="5"
                        marginRight="5"
                        marginTop="5"
                        align="center" 
                        fontStyle='bold'> Profile </Text>
                      </Stack>

                    <VStack spacing="15">
                      <WrapItem>
                        
                       
                      </WrapItem>
                        <Button leftIcon={<SmallAddIcon />} 
                        colorScheme='red' 
                        size='md'
                        onClick={onOpenUploadModal}
                        > Upload</Button>
                    </VStack> 
                  </Box>

                <Box w="600px" h="350px"
                    rounded="4px"
                    bg="#8FAADC"
                    borderColor="gray.300"
                    boxShadow="md">
                  
                    <VStack 
                    bgColor='blue.100' 
                    marginLeft="5" 
                    marginRight="5" 
                    marginTop="5" 
                    rounded="20">
                      <Text 
                      margin={5} 
                      fontSize="20"> Security</Text>
                    </VStack>
                    
                    <FormControl isRequired
                    paddingLeft={10} 
                    paddingRight={10}
                    alignContent="center">
                      <Stack marginTop="5">
                      <HStack justify="space-between">
                          <FormLabel> Old Password</FormLabel>
                            <Input placeholder='Old Password'/>
                        </HStack>      
                        <HStack justify="space-between">                    
                          <FormLabel>New Password</FormLabel>
                            <Input placeholder='New Password' />
                        </HStack>
                        <HStack justify="space-between">
                          <FormLabel>Confirm Password</FormLabel>
                            <Input placeholder='Confirm Password'/>
                        </HStack>
                      </Stack>
                      
                    </FormControl>
                  </Box>

                      <Center>
                        <HStack direction='row' align='flex-end'
                            width="120spx"
                            justifyContent="right">
                          <ButtonGroup colorScheme='red' variant='solid' size='lg' h='1' marginTop="25">
                            <Button>Save All</Button>
                            <Button>Cancel</Button>
                          </ButtonGroup>                  
                        </HStack>
                      </Center>

                    </VStack>
                </Box>


                    </HStack> 
                  </Center>
                </Box>
              </Center>


              <Modal isOpen={isOpenUploadModal} onClose={onCloseUploadModal}>
                      <ModalOverlay />
                      <ModalContent>
                        <ModalCloseButton />
                        <ModalHeader as='b' align="center">Upload Profile Picture</ModalHeader>
                        <ModalBody>
                        <Avatar
                        width={200}
                        height={200}
                        src={src}
                        onClosePrev={onClosePrev}
                        onCrop={onCrop}
                        />

                        </ModalBody>

                        <ModalFooter>
                          <Button colorScheme='red' mr={3} 
                          onClick={() => {onCloseUploadModal(); onClose()}}>
                            Save
                          </Button>
                          <Button variant='ghost' onClick={onCloseUploadModal}>Cancel</Button>
                        </ModalFooter>
                      </ModalContent>
                    </Modal>




          

        </Box>
      </>
    ) 
}
