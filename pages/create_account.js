import {
    Box, HStack, VStack, Text, Heading, Button, Input, Center,
    FormControl,
    FormLabel,
    useToast,
    Select,
    Flex,
    InputGroup,
    InputRightElement,
    Switch
} from "@chakra-ui/react";
import Router, { useRouter } from "next/router";
import { useContext, useEffect, useRef, useState } from "react";
import Head from "next/head";
import TopDrawer from '../constanst/components/drawer';
import { addData } from "../constanst/services/generic";

export default function CreateAccount() {
    const toast = useToast();
    const router = useRouter();
    const [hidePassword, setHidePassword] = useState(true);
    const [newUser, setNewUser] = useState({})
    const [user, setUser] = useState({
        address: "",
        age: "",
        birthday: "",
        email: "",
        first_name: "",
        gender: "",
        first_name: "",
        mobile_number: "",
        password: "",
        profile_url: "",
        role: "",
    })

    async function createAccount() {
        if (user.first_name != "" && user.last_name != ""
            && user.regaddress != ""
            && user.regemail != "" && user.regage != ""
            && user.regbirthday != "" && user.reggender != ""
            && user.regmobile_number != "" && user.regpassword != ""
            && user.regprofile_url != "" && user.role != "") {
            setNewUser(user)
            console.log(user)
            const add = await addData({ path: "users", data: newUser })
            router.reload(window.location.pathname);
            toast({
                title: "Created successful",
                description: add.message,
                status: "success",
                duration: 2500,
                isClosable: true,
                position: "bottom-right",
            });
        }
    }
    return (
        <>
            <Head>
                <title>Dashboard</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Box h={'100vh'} minW={'700px'} bg={"#D9D9D9"}>
                <TopDrawer />
                <Center mt="3%">
                    <Flex w="63vw" h="70vh" borderRadius={"xl"} shadow="lg" minW={'540px'} bg="#97392F">
                        <FormControl isRequired
                            padding={15}
                            justifyContent="center"
                            color="white">
                            <VStack alignItems={"center"} spacing="5" padding={"10"}>
                                <Heading>Create User Account</Heading>
                                <HStack alignItems={"stretch"} alignSelf={"flex-start"} spacing="20">
                                    <Box>
                                        <FormLabel variant="floating">First Name</FormLabel>
                                        <Input placeholder="First Name" bg="white" color={"black"} w="26.5vw" minW={'180px'} onChange={(e) => {
                                            setUser({ ...user, first_name: e.target.value });
                                        }} />
                                    </Box>
                                    <Box>
                                        <FormLabel variant="floating">Last Name</FormLabel>
                                        <Input placeholder="Last Name" bg="white" color={"black"} w="26.5vw" minW={'180px'} onChange={(e) => {
                                            setUser({ ...user, last_name: e.target.value });
                                        }} />
                                    </Box>
                                </HStack>

                                <HStack alignItems={"stretch"} alignSelf={"flex-start"} spacing="20">
                                    <Box>
                                        <FormLabel variant="floating">Address</FormLabel>
                                        <Input placeholder="Address" bg="white" color={"black"} w="26.5vw" minW={'180px'} onChange={(e) => {
                                            setUser({ ...user, address: e.target.value });
                                        }} />
                                    </Box>
                                    <Box>
                                        <FormLabel variant="floating">Mobile Number</FormLabel>
                                        <Input placeholder="Mobile Number" bg="white" color={"black"} w="26.5vw" minW={'180px'} onChange={(e) => {
                                            setUser({ ...user, mobile_number: e.target.value });
                                        }} />
                                    </Box>
                                </HStack>

                                <HStack alignItems={"stretch"} alignSelf={"flex-start"} spacing="20">
                                    <Box>
                                        <FormLabel variant="floating">Role</FormLabel>
                                        <Select
                                            bg="white"
                                            color="black"
                                            w='26.5vw'
                                            minW={'180px'}
                                            placeholder='Position'
                                            onChange={(e) => {
                                                setUser({ ...user, role: e.target.value });
                                            }}>
                                            <option>Admin</option>
                                            <option>User</option>
                                        </Select>
                                    </Box>
                                    <Box>
                                        <FormLabel variant="floating">Gender</FormLabel>
                                        <Select
                                            bg="white"
                                            color="black"
                                            w='26.5vw'
                                            minW={'180px'}
                                            placeholder='Gender'
                                            onChange={(e) => {
                                                setUser({ ...user, role: e.target.value });
                                            }}>
                                            <option>Male</option>
                                            <option>Female</option>
                                        </Select>
                                    </Box>
                                </HStack>

                                <HStack alignItems={"stretch"} alignSelf={"flex-start"} spacing="20">
                                    <Box>
                                        <FormLabel variant="floating">Date of Birth</FormLabel>
                                        <Input placeholder="Birthday" bg="white" type="date" color={"black"} w="26.5vw" minW={'180px'} onChange={(e) => {
                                            setUser({ ...user, birthday: e.target.value });
                                        }} />
                                    </Box>
                                    <Box>
                                        <FormLabel variant="floating">Age</FormLabel>
                                        <Input placeholder="Age" bg="white" color={"black"} w="26.5vw" minW={'180px'} onChange={(e) => {
                                            setUser({ ...user, age: e.target.value });
                                        }} />
                                    </Box>
                                </HStack>

                                <HStack alignItems={"stretch"} alignSelf={"flex-start"} spacing="20">
                                    <Box>
                                        <FormLabel variant="floating">Email</FormLabel>
                                        <Input placeholder="Email" bg="white" color={"black"} w="26.5vw" minW={'180px'} onChange={(e) => {
                                            setUser({ ...user, email: e.target.value });
                                        }} />
                                    </Box>
                                    <Box>
                                        <FormLabel variant="floating">Password</FormLabel>
                                        <InputGroup>
                                            <Input placeholder="password" bg="white" color={"black"} w="26.5vw" type={hidePassword ? "password" : "text"} minW={'180px'} onChange={(e) => {
                                                setUser({ ...user, regPass: e.target.value });
                                            }} />
                                            <InputRightElement children={<Switch
                                                me='5'
                                                colorScheme={"cyan"}
                                                size={"lg"}
                                                onChange={() => setHidePassword(!hidePassword)}
                                            />} />
                                        </InputGroup>
                                    </Box>
                                </HStack>



                                <Button
                                    w="25vw"
                                    bgColor="#F04141"
                                    minW={'180px'}
                                    type="submit"
                                    onClick={createAccount}
                                >Register</Button>
                            </VStack>
                        </FormControl>
                    </Flex>
                </Center>
            </Box>
        </>
    );

}