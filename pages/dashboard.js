import Head from 'next/head'
import { 
  Heading, 
  Center, 
  Flex, 
  Button, 
  Stack, 
  HStack, 
  VStack, 
  Text, 
  Input, 
  Box, 
  Image, 
  Switch, 
  IconButton, 
  useColorModeValue,
  useBreakpointValue, 
  Container, 
  useDisclosure
} from "@chakra-ui/react";
import { Avatar, AvatarBadge, AvatarGroup, AiOutlineUser} from '@chakra-ui/react'
import React, { useEffect, useState, useContext } from "react";
import { FiMenu } from 'react-icons/fi'
import {
  Drawer,
  DrawerBody,
  DrawerFooter,
  DrawerHeader,
  DrawerOverlay,
  DrawerContent,
  DrawerCloseButton,
} from "@chakra-ui/react";
import NextLink from 'next/link'
import { TextareaAutosizeProps } from 'react-textarea-autosize';
import { Card, CardHeader, CardBody, CardFooter } from '@chakra-ui/react'
import { Textarea, Divider, Header } from '@chakra-ui/react';
import Router from "next/router";
import { db, storage} from "../firebase";
import { ref, uploadBytes, getDownloadURL, getStorage } from 'firebase/storage';
import { useAuth } from "../firebase";
import { AttachmentIcon } from '@chakra-ui/icons';
import { addDoc, collection, doc, getDocs, onSnapshot,serverTimestamp } from 'firebase/firestore';
import TopDrawer from '../constanst/components/Drawer';



export default function Dashboard() {
  const currentUser = useAuth();
  const isDesktop = useBreakpointValue({ base: false, lg: true })
  const { isOpen, onOpen, onClose } = useDisclosure();
  const btnRef = React.useRef();
  const [ Posts, setPost] = useState([]);
  const [image, setImage] = useState(null);
  const [url, setUrl] = useState(null);

  useEffect(() => {
    setTimeout(() => {
      const checkSession = localStorage.getItem("email");
      const user_data = JSON.parse(checkSession);
      checkSession?
      getProfileData(user_data.profile_url)
     : Router.push("/");
      
    }, []);
  }, []);

  useEffect (
    () => 
      onSnapshot(collection(db,"announce"),(snapshot) =>
        setPost(snapshot.docs.map(doc => ({...doc.data(), id: doc.id})))
      ),
    []
    );

    async function getProfileData() {
      const imageURL = ref(storage, `/files/${imageURL}`);
       await getDownloadURL(imageURL).then((url) => {
            setUrl(url);
            console.log(url)
          }).catch(error => {
            console.log(error.message, "error");
          })
    }


    return (
       <>

      <Head>
        <title>Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/aexelogo.png" />
      </Head>
      <Box as="section" pb={{ base: '12', md: '24' }}  bg="#fffff" maxW="100vw" minH="100vh"> 

      <TopDrawer/> 
      <Center>
          <VStack w="45vw" minH="70vh" mt="2%" borderRadius="lg" shadow="lg">
          {Posts === undefined? (<>
            </>)
            : 
            (Posts.map((data, index) => {
              return(
              <Card
                width="35vw"
                direction={{ base: 'column', sm: 'row' }}
                overflow='hidden'
                bg="gray.100"
                variant="outline"
                shadow="base"
                outlineColor="gray.900"
                marginTop="6vh"
              >
                <VStack>
                  <CardBody padding={"1em"} paddingTop={"2em"}>
                    <HStack justifyContent={"flex-start"}>
                      <Avatar 
                      src={data?.user?.profile_url}
                      bg='teal.500'  
                      size="sm" align="center" 
                      marginTop="1"></Avatar>
                      <Heading size='md' color={"black"}>{data?.user?.first_name} {data?.user?.last_name}</Heading>
                    </HStack>
                    <Center padding={"2em"}>
                      <Text>{data?.newPost}</Text>
                    </Center>
                  </CardBody>
                </VStack>
              </Card>
              )}))
            }
          </VStack>
        </Center>
      </Box> 
      </>
    )
}

const styleProps = {
    indexWrapper: {
      height: "100vh",
      flexDirection: "column",
      alignItems: "center",
      justifyContent: "center",
      bgColor: "#22202A",
    },
    formWrapper: {
      borderRadius: "xl",
      width: "54vh",
      height: "50vh",
      flexDirection: "column",
      alignItems: "center",
      padding: "2vh",
      color: "white",
      bgColor: "#E1CBA5",
      
      
    }
  }