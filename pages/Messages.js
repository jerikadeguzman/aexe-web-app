import Head from 'next/head'
import { 
  Heading, 
  Center, 
  Flex, 
  Button, 
  Stack, 
  HStack, 
  VStack, 
  Text, 
  Input, 
  Box, 
  Image, 
  Switch, 
  useColorModeValue,
  useBreakpointValue, 
  Container, 
  useDisclosure, 
  FormControl,
  WrapItem
} from "@chakra-ui/react";
import { Avatar, AvatarBadge, AvatarGroup, AiOutlineUser } from "@chakra-ui/avatar"
import React, { useEffect, useState, useContext } from "react";
import { IconButton } from '@chakra-ui/react'
import {
  Drawer,
  DrawerBody,
  DrawerFooter,
  DrawerHeader,
  DrawerOverlay,
  DrawerContent,
  DrawerCloseButton,
} from "@chakra-ui/react";
import Sidebar from '../constanst/components/Sidebar';
import { FiMenu } from 'react-icons/fi';
import { ChatIcon, Search2Icon } from '@chakra-ui/icons';
import NextLink from "next/link";
import Router from "next/router";
import { ChakraProvider } from '@chakra-ui/provider';
import { Component } from 'react';
import { storage } from "../firebase";
import { ref, uploadBytes, getDownloadURL, getStorage } from 'firebase/storage';
import { useAuth } from "../firebase";

export default function Messages(){
  const currentUser = useAuth();
  const btnRef = React.useRef();
  const { isOpen, onOpen, onClose } = useDisclosure();
 /* useEffect(() => {
    setTimeout(() => {
      const checkSession = localStorage.getItem("email");
      const user_data = JSON.parse(checkSession);
      checkSession?
        getProfileData(user_data.profile_url)
       
     : Router.push("/");
      
    }, []);
  }, []);

  async function getProfileData() {
    const imageURL = ref(storage, `/files/${imageURL}`);
     await getDownloadURL(imageURL).then((url) => {
          setUrl(url);
          console.log(url)
        }).catch(error => {
          console.log(error.message, "error");
        })
  }

  const [image, setImage] = useState(null);
  const [url, setUrl] = useState(null);
  const handleImageChange =(e) =>{
    if(e.target.files[0]){
      setImage(e.target.files[0]);
    }
  };
  const handleSubmit = () => {
    const imageURL = ref(storage, `/files/${imageURL}`);
    //image: should be unique name
    uploadBytes(imageURL, image).then(() =>{
      getDownloadURL(imageURL, image).then((url) => {
        setUrl(url);
        //console.log(File)
        //update doc ng user na naka login
      }).catch(error => {
        console.log(error.message, "error");
      });
      setImage(null);
    }).catch(error => {
      console.log(error.message);
    });

  }; 

 useEffect(() =>{
  if ( currentUser?.url){
    setUrl(currentUser.url);
    console.log("fetching");
  }
 }, [])*/

 
  const Topbar = () => {
    return(
      <Flex 
      bg="gray.100" 
      h="80px" 
      w="100%" 
      align="center">

        <Avatar src="" marginEnd={3}/>
        <Heading size="md">user@gmail.com</Heading>
      </Flex>
    )
  }

    return(
        <> 
      <Head>
        <title>Messages</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/aexelogo.png" />
      </Head>
          
      <Box as="section" pb={{ base: '12', md: '24' }}  bg="#97392F"> 
  <Box as="nav" bg="bg-surface" boxShadow={useColorModeValue('sm', 'sm-dark')}>
    <Flex>
      <IconButton
      color="white"
      ref={btnRef}
      icon={<FiMenu fontSize="1.25rem"/>}
      onClick={onOpen}
      aria-label="Open Menu"
      bg="#97392F"
      />

      <IconButton
      icon={<Image src="/aexelogo.png"/>}
      w="5px"
      isRound={true}
      aria-label="Homepage"
      onClick={() => Router.push("/dashboard")}
      />
      
      <Avatar 
        //src={url}
        bg='teal.500'  
        size="sm" align="center" 
        marginLeft="83%"  
        marginTop="1"></Avatar>
      
    <Drawer
      isOpen={isOpen}
      placement="left"
      colorScheme={"blue"}
      onClose={onClose}
      finalFocusRef={btnRef}>

      <DrawerOverlay/>
      <DrawerContent>
        <DrawerCloseButton />

        <DrawerHeader bgColor='#97392F'>
          <HStack>
            <Heading 
            as='h4' 
            size='md' 
            color='whiteAlpha.900'>Welcome Admin</Heading>
          </HStack>
        </DrawerHeader>

        <DrawerBody bgColor='#ffffff '>
          <Flex flexDir="column" align="center">
            <NextLink href="/Profile" passHref>
              <Button as="a" 
              variant="ghost" 
              aria-label="Profile" 
              my={5} w="100%" 
              textColor='#696969' 
              color="blue">Profile
              </Button>
            </NextLink>
          </Flex>

          <Flex flexDir="column" align="center">
            <NextLink href="/Messages" passHref>
              <Button as="a" 
              variant="ghost" 
              aria-label="Messages" 
              my={5} w="100%" 
              textColor='#696969' 
              color="blue">Messages</Button>
            </NextLink>
        </Flex>

        <Flex flexDir="column" align="center">
            <NextLink href="/ARInstructor" passHref>
              <Button as="a" 
              variant="ghost" 
              aria-label="AR Instructor" 
              my={5} w="100%" 
              textColor='#696969'>AR Instructor</Button>
            </NextLink>
        </Flex>

        <Flex flexDir="column" align="center">
            <NextLink href="/Announcement" passHref>
              <Button as="a" 
              variant="ghost" 
              aria-label="Announcements" 
              my={5} w="100%" 
              textColor='#696969'>Announcement</Button>
            </NextLink>
        </Flex>

        <Flex flexDir="column" align="center">
            <NextLink href="/UserInquiries" passHref>
              <Button 
              as="a" 
              variant="ghost" 
              aria-label="UserInquiries" 
              my={5} w="100%" 
              textColor='#696969'>User Inquiries</Button>
            </NextLink>
        </Flex>

        <Flex flexDir="column" align="center">
            <NextLink href="/Settings" passHref>
              <Button as="a" 
              variant="ghost" 
              aria-label="Settings" 
              my={5} w="100%" 
              textColor='#696969'>Settings</Button>
            </NextLink>
        </Flex>
        </DrawerBody>

        <DrawerFooter bgColor='#ffffff'>
          <Button colorScheme='red'
          onClick={() => {Router.push("/")
          localStorage.clear();
        }}>Logout</Button>
        </DrawerFooter>

      </DrawerContent>
    </Drawer>

  </Flex>
</Box>

  <Center>
    <Box bg="lavender" w="1550px" h="800px">

    <Flex>

      <Sidebar />

      <Flex flex={1} direction="column">

        <Flex flex={1} direction="column" pt={4} mx={5} overflowX="scroll">
        </Flex>

      
      </Flex>

    </Flex>
               
    </Box>
</Center>

</Box>  
        </>
    ) 
}