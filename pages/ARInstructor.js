import Head from 'next/head'
import { 
  Heading, 
  Center, 
  Flex, 
  Button, 
  Stack, 
  HStack, 
  VStack, 
  Text, 
  Input, 
  Box, 
  Image, 
  Switch, 
  useColorModeValue,
  useBreakpointValue, 
  Container, 
  useDisclosure
} from "@chakra-ui/react";
import { Avatar, AvatarBadge, AvatarGroup, AiOutlineUser } from '@chakra-ui/react'
import React, { useEffect, useState, useContext } from "react";
import { Form, FormControl, FormErrorMessage, FormLabel } from '@chakra-ui/react'
import Router from "next/router";
import { FiMenu } from 'react-icons/fi'
import { IconButton, ButtonGroup } from '@chakra-ui/react'
import {
  Drawer,
  DrawerBody,
  DrawerFooter,
  DrawerHeader,
  DrawerOverlay,
  DrawerContent,
  DrawerCloseButton,
} from "@chakra-ui/react";
import NextLink from "next/link";
import { storage } from "../firebase";
import { ref, uploadBytes, getDownloadURL, getStorage } from 'firebase/storage';
import { useAuth } from "../firebase";
import TopDrawer from '../constanst/components/Drawer';


export default function Messages(){
  const currentUser = useAuth();
  const isDesktop = useBreakpointValue({ base: false, lg: true })
  const { isOpen, onOpen, onClose } = useDisclosure();
  const btnRef = React.useRef();
  /*useEffect(() => {
    setTimeout(() => {
      const checkSession = localStorage.getItem("email");
      const user_data = JSON.parse(checkSession);
      checkSession?
        getProfileData(user_data.profile_url)
       
     : Router.push("/");
      
    }, []);
  }, []);

  async function getProfileData() {
    const imageURL = ref(storage, `/files/${imageURL}`);
     await getDownloadURL(imageURL).then((url) => {
          setUrl(url);
          console.log(url)
        }).catch(error => {
          console.log(error.message, "error");
        })
  }

  const [image, setImage] = useState(null);
  const [url, setUrl] = useState(null);
  const handleImageChange =(e) =>{
    if(e.target.files[0]){
      setImage(e.target.files[0]);
    }
  };
  const handleSubmit = () => {
    const imageURL = ref(storage, `/files/${imageURL}`);
    //image: should be unique name
    uploadBytes(imageURL, image).then(() =>{
      getDownloadURL(imageURL, image).then((url) => {
        setUrl(url);
        //console.log(File)
        //update doc ng user na naka login
      }).catch(error => {
        console.log(error.message, "error");
      });
      setImage(null);
    }).catch(error => {
      console.log(error.message);
    });

  }; 

 useEffect(() =>{
  if ( currentUser?.url){
    setUrl(currentUser.url);
    console.log("fetching");
  }
 }, [])*/

    return(
        <> 
      <Head>
        <title>ARInstructor</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/aexelogo.png" />
      </Head>
      <Box as="section" pb={{ base: '12', md: '24' }}  bg="#97392F" maxW="100vw" minH="100vh"> 

        <TopDrawer/> 
        <VStack justifyContent="center" h="80vh">
          <Box bg="#ffffff" w="80vw" h="50vh" >
              <Center>
                <VStack>
                    
                    <HStack
                      direction='row'  
                      width="50px"
                      justifyContent="center"
                      spacing="120">

                    <ButtonGroup variant='solid' spacing='10vw' mt="150%">
                      <Button bgColor='#696969' size='lg' h="30vh"
                      textColor="white"
                      alignSelf={"flex-end"}
                      onClick={() => Router.push("/Viewvideos")}
                      >View Record Videos</Button>

                      <Button bgColor='#696969' size='lg' h="30vh"
                      textColor="white"
                      onClick={() => Router.push("/Exercise")}
                      >Add/Update Exercise</Button>
                    </ButtonGroup>
                  </HStack>
                </VStack>
              </Center> 
          </Box>
        </VStack>     
      </Box>
        </>
    ) 
}